import type { StoryFormData } from '@/app/create/page'

const DRAFT_KEY = 'narratica-story-draft'
const DRAFT_EXPIRY_HOURS = 24

interface StoredDraft {
  data: Partial<StoryFormData>
  timestamp: number
}

export const autoSaveDraft = (formData: Partial<StoryFormData>) => {
  try {
    const draft: StoredDraft = {
      data: formData,
      timestamp: Date.now()
    }
    localStorage.setItem(DRAFT_KEY, JSON.stringify(draft))
  } catch (error) {
    console.error('Failed to save draft:', error)
  }
}

export const loadDraft = (): Partial<StoryFormData> | null => {
  try {
    const stored = localStorage.getItem(DRAFT_KEY)
    if (!stored) return null

    const draft: StoredDraft = JSON.parse(stored)
    const hoursAgo = (Date.now() - draft.timestamp) / (1000 * 60 * 60)
    
    if (hoursAgo > DRAFT_EXPIRY_HOURS) {
      localStorage.removeItem(DRAFT_KEY)
      return null
    }

    return draft.data
  } catch (error) {
    console.error('Failed to load draft:', error)
    return null
  }
}

export const clearDraft = () => {
  try {
    localStorage.removeItem(DRAFT_KEY)
  } catch (error) {
    console.error('Failed to clear draft:', error)
  }
}

export const hasDraft = (): boolean => {
  const draft = loadDraft()
  return draft !== null && (draft.storyDescription || draft.autoGeneratedTitle)
}
